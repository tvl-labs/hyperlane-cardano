apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hyperlane-relayer.fullname" . }}
  labels:
    {{- include "hyperlane-relayer.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "hyperlane-relayer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "hyperlane-relayer.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hyperlane-relayer.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          command: ["./relayer"]
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: CONFIG_FILES
              value: /app/config/cardano-test-config.json
            - name: HYP_BASE_DB
              value: /app/db/
            - name: HYP_RELAYER_ORIGINCHAINNAME
              value: {{ required "Origin chain" .Values.relayer.originChain }}
            - name: HYP_RELAYER_DESTINATIONCHAINNAMES
              value: {{ required "Destination chain name" .Values.relayer.destinationChainEnv }}
            - name: "HYP_BASE_CHAINS_{{ .Values.relayer.destinationChainEnv }}_CONNECTION_URL"
              value: {{ required "Destination chain RPC" .Values.relayer.destinationChainRpc }}

            - name: "HYP_BASE_CHAINS_{{ .Values.relayer.originChain }}_CONNECTION_URL"
              value: {{ required "Origin chain RPC" .Values.relayer.originChainRpc }}

            # Do not charge gas payments for now.
            - name: HYP_RELAYER_GASPAYMENTENFORCEMENT
              value: '[{"type": "none"}]'
            - name: HYP_RELAYER_GASPAYMENTENFORCEMENTPOLICY_TYPE
              value: none

            {{- if .Values.relayer.useBlake2MerkleTree }}
            - name: MERKLE_TREE_HASH_BLAKE2B
              value: "true"
            {{- end }}
            # Important flag to enable Blake2b support.
            - name: MERKLE_TREE_HASH_BLAKE2B
              value: "true"

            # Use hex key (test only).
            - name: "HYP_BASE_CHAINS_{{ .Values.relayer.destinationChainEnv }}_SIGNER_TYPE"
              value: hexKey
            - name: "HYP_BASE_CHAINS_{{ .Values.relayer.destinationChainEnv }}_SIGNER_KEY"
              value: {{ required "Relayer private key" .Values.relayer.privateKey }}

            # Allow downloading checkpoints from local storage (test only).
            - name: HYP_BASE_ALLOWLOCALCHECKPOINTSYNCERS
              value: "true"

            - name: HYP_BASE_METRICS
              value: "9090"
            - name: HYP_BASE_TRACING_LEVEL
              value: debug
            - name: HYP_BASE_TRACING_FMT
              value: pretty
          ports:
            - name: metrics
              containerPort: 9090
          volumeMounts:
            - name: cardano-test-config
              mountPath: /app/config/cardano-test-config.json
              subPath: cardano-test-config.json
            - name: checkpoints-volume
              mountPath: /tmp/checkpoints/
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      volumes:
        - name: checkpoints-volume
          persistentVolumeClaim:
            claimName: local-checkpoints-pvc
        - name: cardano-test-config
          configMap:
            name: cardano-test-config
            items:
              - key: cardano-test-config.json
                path: cardano-test-config.json