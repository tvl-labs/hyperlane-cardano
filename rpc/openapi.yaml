openapi: 3.0.0
info:
  title: Outbox RPC API
  version: 1.0.0
paths:
  /api/indexer/lastFinalizedBlock:
    get:
      summary: "Get the last finalized block"
      operationId: "lastFinalizedBlock"
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  lastFinalizedBlock:
                    type: integer
                    example: 10
  /api/indexer/merkleTree/{blockNumber}:
    get:
      summary: "Get the MerkleTree that was in the OutboxUtxo at the given blockNumber"
      operationId: "merkleTreeByBlockNumber"
      parameters:
        - name: "blockNumber"
          in: "path"
          required: true
          description: "Block number to retrieve the MerkleTree"
          schema:
            type: integer
            example: 5
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  blockNumber:
                    type: integer
                    example: 5
                  merkleTree:
                    type: object
                    properties:
                      count:
                        type: integer
                        example: 1
                      branches:
                        type: array
                        items:
                          type: string
                        example: [
                          "0x3b3153b5b2c1c50efca4b92a3804a037ceb79769545f8f4f85dec3bdbbaa7df5",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000",
                          "0x0000000000000000000000000000000000000000000000000000000000000000"
                        ]
  /api/indexer/messages/{fromBlock}/{toBlock}:
    get:
      summary: "Get messages from fromBlock to toBlock"
      operationId: "messagesByBlockRange"
      parameters:
        - name: "fromBlock"
          in: "path"
          required: true
          description: "Start block number"
          schema:
            type: integer
            example: 0
        - name: "toBlock"
          in: "path"
          required: true
          description: "End block number"
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        block:
                          type: integer
                          example: 3
                        message:
                          type: object
                          properties:
                            version:
                              type: integer
                              example: 0
                            nonce:
                              type: integer
                              example: 0
                            origin:
                              type: string
                              example: "0xEF"
                            sender:
                              type: string
                              example: "0x0000000000000000000000000000000000000CA1"
                            destination:
                              type: string
                              example: "0xCA"
                            recipient:
                              type: string
                              example: "0x0000000000000000000000000000000000000EA1"
                            body:
                              type: string
                              example: "0xADA"
