openapi: 3.0.0
info:
  title: Outbox RPC API
  version: 1.0.0
servers:
- url: /
paths:
  /api/indexer/lastFinalizedBlock:
    get:
      operationId: lastFinalizedBlock
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/lastFinalizedBlock_200_response'
          description: Successful operation
      summary: Get the last finalized block
      x-eov-operation-handler: controllers/DefaultController
  /api/indexer/merkleTree:
    get:
      operationId: merkleTree
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merkleTree_200_response'
          description: Successful operation
      summary: Retrieve the MerkleTree of the latest (finalized) alive Outbox (UTXO)
      x-eov-operation-handler: controllers/DefaultController
  /api/indexer/messages/{fromBlock}/{toBlock}:
    get:
      operationId: messagesByBlockRange
      parameters:
      - description: Start block number
        explode: false
        in: path
        name: fromBlock
        required: true
        schema:
          example: 0
          type: integer
        style: simple
      - description: End block number
        explode: false
        in: path
        name: toBlock
        required: true
        schema:
          example: 10
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messagesByBlockRange_200_response'
          description: Successful operation
      summary: Get messages from fromBlock to toBlock
      x-eov-operation-handler: controllers/DefaultController
components:
  schemas:
    messagesByBlockRange_200_response:
      example:
        messages:
        - block: 3
          message:
            destinationDomain: 5
            sender: sender
            recipient: recipient
            body: body
            version: 0
            nonce: 6
            originDomain: 1
        - block: 3
          message:
            destinationDomain: 5
            sender: sender
            recipient: recipient
            body: body
            version: 0
            nonce: 6
            originDomain: 1
      properties:
        messages:
          items:
            $ref: '#/components/schemas/messagesByBlockRange_200_response_messages_inner'
          type: array
      required:
      - messages
      type: object
    messagesByBlockRange_200_response_messages_inner:
      example:
        block: 3
        message:
          destinationDomain: 5
          sender: sender
          recipient: recipient
          body: body
          version: 0
          nonce: 6
          originDomain: 1
      properties:
        block:
          example: 3
          type: integer
        message:
          $ref: '#/components/schemas/messagesByBlockRange_200_response_messages_inner_message'
      required:
      - block
      - message
      type: object
    messagesByBlockRange_200_response_messages_inner_message:
      example:
        destinationDomain: 5
        sender: sender
        recipient: recipient
        body: body
        version: 0
        nonce: 6
        originDomain: 1
      properties:
        version:
          type: integer
        nonce:
          type: integer
        originDomain:
          type: integer
        sender:
          type: string
        destinationDomain:
          type: integer
        recipient:
          type: string
        body:
          type: string
      required:
      - body
      - destinationDomain
      - nonce
      - originDomain
      - recipient
      - sender
      - version
      type: object
    lastFinalizedBlock_200_response:
      example:
        lastFinalizedBlock: 10
      properties:
        lastFinalizedBlock:
          example: 10
          type: integer
      type: object
    merkleTree_200_response_merkleTree:
      example:
        count: 1
        branches:
        - branches
        - branches
        - branches
        - branches
        - branches
      properties:
        count:
          example: 1
          type: integer
        branches:
          items:
            type: string
          maxItems: 32
          minItems: 32
          type: array
      required:
      - branches
      - count
      type: object
    merkleTree_200_response:
      example:
        merkleTree:
          count: 1
          branches:
          - branches
          - branches
          - branches
          - branches
          - branches
        blockNumber: 5
      properties:
        blockNumber:
          example: 5
          type: integer
        merkleTree:
          $ref: '#/components/schemas/merkleTree_200_response_merkleTree'
      required:
      - blockNumber
      - merkleTree
      type: object
