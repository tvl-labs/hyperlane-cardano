openapi: 3.0.0
info:
  title: Hyperlane <> Cardano RPC API
  version: 1.0.0
paths:
  /api/indexer/lastFinalizedBlock:
    get:
      summary: "Get the last finalized block"
      operationId: "lastFinalizedBlock"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  lastFinalizedBlock:
                    type: integer
                    example: 10
  /api/indexer/merkleTree:
    get:
      summary: "Retrieve the MerkleTree of the latest (finalized) alive Outbox (UTXO)"
      operationId: "merkleTree"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: object
                required:
                  - blockNumber
                  - merkleTree
                properties:
                  blockNumber:
                    type: integer
                    example: 5
                  merkleTree:
                    type: object
                    required:
                      - count
                      - branches
                    properties:
                      count:
                        type: integer
                        example: 1
                      branches:
                        type: array
                        minItems: 32
                        maxItems: 32
                        items:
                          type: string
  /api/indexer/messages/{fromBlock}/{toBlock}:
    get:
      summary: "Get messages from fromBlock to toBlock"
      operationId: "messagesByBlockRange"
      parameters:
        - name: "fromBlock"
          in: "path"
          required: true
          description: "Start block number"
          schema:
            type: integer
            example: 0
        - name: "toBlock"
          in: "path"
          required: true
          description: "End block number"
          schema:
            type: integer
            example: 10
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: object
                required:
                  - messages
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      required:
                        - block
                        - message
                      properties:
                        block:
                          type: integer
                          example: 3
                        message:
                          type: object
                          required:
                            - version
                            - nonce
                            - originDomain
                            - sender
                            - destinationDomain
                            - recipient
                            - body
                          properties:
                            version:
                              type: integer
                            nonce:
                              type: integer
                            originDomain:
                              type: integer
                            sender:
                              type: string
                            destinationDomain:
                              type: integer
                            recipient:
                              type: string
                            body:
                              type: string
  /api/validator-announcement/get-storage-locations/:
    post:
      operationId: "getValidatorStorageLocations"
      summary: Returns storage locations for the given validators addresses (0x prefixed 32 bytes, total length of 66 characters)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                validatorAddresses:
                  type: array
                  items:
                    type: string
              required:
                - validatorAddresses
      responses:
        200:
          description: A list of validator addresses (0x prefix 32 bytes, total length of 66 characters) with their corresponding storage locations
          content:
            application/json:
              schema:
                type: object
                required:
                  - validatorStorageLocations
                properties:
                  validatorStorageLocations:
                    type: array
                    items:
                      type: object
                      required:
                        - validatorAddress
                        - storageLocation
                      properties:
                        validatorAddress:
                          type: string
                        storageLocation:
                          type: string
  /api/inbox/ism-parameters:
    get:
      summary: "Get the inbox ISM parameters"
      operationId: "inboxIsmParameters"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  validators:
                    type: array
                    items:
                      type: string
                  threshold:
                    type: number
                required:
                  - validators
                  - threshold
