openapi: 3.0.0
info:
  title: Hyperlane <> Cardano RPC API
  version: 1.0.0
paths:
  /api/indexer/lastFinalizedBlock:
    get:
      summary: "Get the last finalized block"
      operationId: "lastFinalizedBlock"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  lastFinalizedBlock:
                    type: integer
                    minimum: 0
                    example: 10
  /api/indexer/merkleTree:
    get:
      summary: "Retrieve the MerkleTree of the latest (finalized) alive Outbox (UTXO)"
      operationId: "merkleTree"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: object
                required:
                  - blockNumber
                  - merkleTree
                properties:
                  blockNumber:
                    type: integer
                    minimum: 0
                    example: 5
                  merkleTree:
                    type: object
                    required:
                      - count
                      - branches
                    properties:
                      count:
                        type: integer
                        minimum: 0
                        example: 1
                      branches:
                        type: array
                        minItems: 32
                        maxItems: 32
                        items:
                          type: string
  /api/indexer/messages/{fromBlock}/{toBlock}:
    get:
      summary: "Get messages from fromBlock to toBlock"
      operationId: "messagesByBlockRange"
      parameters:
        - name: "fromBlock"
          in: "path"
          required: true
          description: "Start block number"
          schema:
            type: integer
            minimum: 0
            example: 0
        - name: "toBlock"
          in: "path"
          required: true
          description: "End block number"
          schema:
            type: integer
            minimum: 0
            example: 10
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: object
                required:
                  - messages
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      required:
                        - block
                        - message
                      properties:
                        block:
                          type: integer
                          minimum: 0
                          example: 3
                        message:
                          type: object
                          required:
                            - version
                            - nonce
                            - originDomain
                            - sender
                            - destinationDomain
                            - recipient
                            - body
                          properties:
                            version:
                              type: integer
                              minimum: 0
                            nonce:
                              type: integer
                              minimum: 0
                            originDomain:
                              type: integer
                              minimum: 0
                            sender:
                              type: string
                            destinationDomain:
                              type: integer
                              minimum: 0
                            recipient:
                              type: string
                            body:
                              type: string
  /api/validator-announcement/get-storage-locations/:
    post:
      operationId: "getValidatorStorageLocations"
      summary: Returns storage locations for the given validators addresses (0x prefixed 32 bytes, total length of 66 characters)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                validatorAddresses:
                  type: array
                  items:
                    type: string
              required:
                - validatorAddresses
      responses:
        200:
          description: A list of validator addresses (0x prefix 32 bytes, total length of 66 characters) with their corresponding storage locations. This list may not contain some addresses passed in the input, meaning that locations of those validators are not known.
          content:
            application/json:
              schema:
                type: object
                required:
                  - validatorStorageLocations
                properties:
                  validatorStorageLocations:
                    type: array
                    items:
                      type: object
                      required:
                        - validatorAddress
                        - storageLocation
                      properties:
                        validatorAddress:
                          type: string
                        storageLocation:
                          type: string
  /api/inbox/ism-parameters:
    get:
      summary: "Get the inbox ISM parameters"
      operationId: "inboxIsmParameters"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: object
                properties:
                  validators:
                    type: array
                    items:
                      type: string
                  threshold:
                    type: integer
                    minimum: 0
                required:
                  - validators
                  - threshold
  /api/inbox/is-message-delivered/{messageId}:
    get:
      operationId: "isInboxMessageDelivered"
      summary: Check if an inbox message was delivered
      parameters:
        - name: "messageId"
          in: "path"
          required: true
          description: "The message id to check"
          schema:
            type: string
      responses:
        200:
          description: A boolean value whether the message was delivered
          content:
            application/json:
              schema:
                type: object
                properties:
                  isDelivered:
                    type: boolean
                required:
                  - isDelivered
  /api/inbox/estimate-message-fee:
    post:
      operationId: "estimateInboundMessageFee"
      summary: Estimate the fee in ADA to deliver an inbound message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                relayerCardanoAddress:
                  type: string
                origin:
                  type: integer
                  minimum: 0
                originMailbox:
                  type: string
                checkpointRoot:
                  type: string
                checkpointIndex:
                  type: integer
                  minimum: 0
                message:
                  type: object
                  properties:
                    version:
                      type: integer
                      minimum: 0
                    nonce:
                      type: integer
                      minimum: 0
                    originDomain:
                      type: integer
                      minimum: 0
                    sender:
                      type: string
                    destinationDomain:
                      type: integer
                      minimum: 0
                    recipient:
                      type: string
                    message:
                      type: string
                  required:
                    - version
                    - nonce
                    - originDomain
                    - sender
                    - destinationDomain
                    - recipient
                    - message
                signatures:
                  type: array
                  items:
                    type: string # hex
              required:
                - relayerCardanoAddress
                - origin
                - originMailbox
                - checkpointRoot
                - checkpointIndex
                - message
                - signatures
      responses:
        200:
          description: The estimated fee in ADA to deliver the inbound message
          content:
            application/json:
              schema:
                type: object
                properties:
                  feeLovelace:
                    type: integer
                    minimum: 0
                required:
                  - feeLovelace
  /api/inbox/submit-message:
    post:
      operationId: "submitInboundMessage"
      summary: Submit an new inbound message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                relayerCardanoAddress:
                  type: string
                privateKey:
                  type: string
                origin:
                  type: integer
                  minimum: 0
                originMailbox:
                  type: string
                checkpointRoot:
                  type: string
                checkpointIndex:
                  type: integer
                  minimum: 0
                message:
                  type: object
                  properties:
                    version:
                      type: integer
                      minimum: 0
                    nonce:
                      type: integer
                      minimum: 0
                    originDomain:
                      type: integer
                      minimum: 0
                    sender:
                      type: string
                    destinationDomain:
                      type: integer
                      minimum: 0
                    recipient:
                      type: string
                    message:
                      type: string
                  required:
                    - version
                    - nonce
                    - originDomain
                    - sender
                    - destinationDomain
                    - recipient
                    - message
                signatures:
                  type: array
                  items:
                    type: string # hex
              required:
                - relayerCardanoAddress
                - privateKey
                - origin
                - originMailbox
                - checkpointRoot
                - checkpointIndex
                - message
                - signatures
      responses:
        200:
          description: The tx id of the inbound message on Cardano
          content:
            application/json:
              schema:
                type: object
                properties:
                  txId:
                    type: string
                required:
                  - txId
  /api/outbox/get-message-gas-payment:
    post:
      operationId: "getOutboundGasPayment"
      summary: Get the outbound gas payment for a message to a relayer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                relayerAddress:
                  type: string
                messageId:
                  type: string
              required:
                - relayerAddress
                - messageId
      responses:
        200:
          description: The total amount of gas paid to the relayer for the message
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalGasLovelace:
                    type: integer
                    minimum: 0
                required:
                  - totalGasLovelace
